segment_dir = user_folder ++ "/Application Data/Settings"
segment_url = segment_dir + "/Segments.txt"
file "exists" segment_url
if exists (
  file "open" segment_url
  seg = file.[4]
) else (
  seg = ["Main","Applications","Time","Battery"]
  file "download" "segments.txt" "" seg segment_dir
)

global "segments" seg
open = 0
def "main"
  goto dock_x y
  syscount = 0
  loop segments.len (
    syscount ++
    import segments.[syscount] "ode" : c#dock_colour chx#15
    goto width / 2 + x + 15 y
  )
  dock_width = x_position - dock_x
  dock_width.round
endef

def "performance_mode"
  loc 2 999
  include user_folder ++ "/Dock"
  c #050505
  if data.len != 0 (
    dock = data
    width = dock.len * 50 + 100
    set_y y
    square width 40 20 0 1
    if dock.len != dock_appslen_temp or mouse_touching or bg_redrawn (
      square width 40 20
      change_x 20
      dock_appslen_temp = dock.len
      applicationscount = 0
      loop dock.len (
        applicationscount ++
        file "open" dock.[applicationscount]
        file "render" 1.7 "interactable"
        rightclick "file" dock.[applicationscount]
        change_x 50
      )
    )
  )
  change_x 30
  text "<hour>:<minute>" 10 : c#fff
endef
window "responsive" true
window "hide"
window "front"
window "y" screensize_y / -2 + 35
main
// Parameter setup
dock_x = dock_width / -2
y = -100
height = 40
// Theme

if user."dock_colour" == null (
  network "update" "dock_colour" #060606
)
if user."icon_colour" == null (
  network "update" "icon_colour" #f3f3f3
)

file_loc = user_folder ++ "/Dock"

mainloop:
dock_colour = user."dock_colour"
icon_colour = user."icon_colour"

movefileloc file_loc
if mouse_down.not "canclick = True"
window "dimensions" screensize_x 70
window "y" screensize_y / -2 + 35
terminal "get windowpositions"
data = data + dock_width.round
if data != datasave (
  datasave = data
  data = "" + data.join(" ") + ""
  dock_x_target = dock_width / -2
  dock_y_target = 0
  left = data.contains(" 1,0 ") or data.contains(" 1,-1 ")
  right = data.contains(" -1,0 ") or data.contains(" -1,-1 ")
  if ( left and right ) or data.contains(" 0,0 ") (
    dock_x_target = dock_width / -2
    dock_y_target = -100
  ) else (
    if left "dock_x_target = window_width / -2"
    if right "dock_x_target = window_width / 2 - dock_width"
  )
  dock_x_target.round
)
if delta_time < 0.1 (
  rou = dock_x.round
  dock_x += dock_x_target.round - rou * delta_time * 7
  if rou != dock_x_target (
    window "refresh_bg"
  )
  y += dock_y_target - y.round * delta_time * 3
  if y.round != dock_y_target.round (
    window "refresh_bg"
  )
)
if y > -80 "main"
if open != 0 and mouse_down.not (
  terminal "system windows close" + open
  terminal "system windows add" + open
  open = 0
)
